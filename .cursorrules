Root path: /

Active Components:
    /src/components/
        PeriodicTable.tsx           # Основной компонент с логикой таблицы
        CustomElementCreator.tsx     # Создание новых элементов
        ElementCounter.tsx          # Счетчик элементов
        ControlPanel.tsx           # Панель управления видами
        LoadingOverlay.tsx         # Компонент загрузки
        Notification.tsx           # Компонент уведомлений
        ui/                        # UI компоненты
            button.tsx             # Кнопки
            card.tsx              # Карточки
            icons.tsx             # Иконки
            input.tsx             # Поля ввода
            label.tsx             # Метки

Active Hooks:
    /src/hooks/
        useHeartEffect.ts          # Эффект сердца
        useStarEffect.ts          # Эффект звезды
        useViewPositions.ts       # Позиционирование элементов
        useShapeEffects.ts        # Общие эффекты фигур
        usePeriodicTableSetup.ts  # Инициализация таблицы

Features (FSD):
    /src/features/shapes/
        model.ts                  # Модели и типы фигур
        lib/useShapeTransition.ts # Переходы между фигурами

Shared:
    /src/shared/
        constants/shapes.ts       # Константы фигур
        types/index.ts           # Общие типы
        utils/threeHelpers.ts    # Утилиты Three.js

Data:
    /src/data/
        periodicTable.ts         # Данные элементов

API:
    /src/api/
        main.py                  # Python API

Build Safety Rules:
    1. Импорты:
        - Проверять существование файлов перед импортом
        - Использовать абсолютные пути для импортов из features/
        - Все константы должны быть в model.ts
        - Не создавать новые файлы констант без обновления документации
    
    2. Типизация:
        - Все типы должны быть определены в model.ts
        - Использовать строгую типизацию
        - Избегать any и unknown
    
    3. Хуки:
        - Соблюдать порядок инициализации
        - Изолировать побочные эффекты
        - Очищать ресурсы в cleanup функциях
    
    4. Сборка:
        - Запускать проверку типов перед коммитом
        - Тестировать сборку локально перед пушем
        - Документировать все изменения в структуре проекта
    
    5. Обработка ошибок:
        - Избегать рекурсивных вызовов в анимациях
        - Очищать все анимации перед новыми
        - Использовать cancelAnimationFrame в cleanup
        - Проверять существование объектов перед анимацией
        - Логировать ошибки без рекурсии

Current Status:
    ✅ Основные экраны работают
    ✅ Проблемы с переходом к сердцу и звезде    
    ✅ Требуется фикс появления сердца
    ⚠️ Требуется улучшение звезды Давида
    ⚠️ Нужна реорганизация под FSD
