Root path: /

Active Components:
    /src/components/
        PeriodicTable.tsx               # Основной компонент с логикой таблицы
        CustomElementCreator.tsx        # Создание новых элементов
        ElementCounter.tsx              # Счетчик элементов
        ControlPanel.tsx                # Панель управления видами
        LoadingOverlay.tsx              # Компонент загрузки
        Notification.tsx                # Компонент уведомлений
        ui/                             # UI компоненты
            button.tsx                  # Кнопки
            card.tsx                    # Карточки
            icons.tsx                   # Иконки
            input.tsx                   # Поля ввода
            label.tsx                   # Метки

Active Hooks:
    /src/hooks/
        useHeartEffect.ts               # Эффект сердца
        useStarEffect.ts                # Эффект звезды
        useViewPositions.ts             # Позиционирование элементов
        useShapeEffects.ts              # Общие эффекты фигур
        usePeriodicTableSetup.ts        # Инициализация таблицы

Features (FSD):
    /src/features/shapes/
        model.ts                        # Модели и типы фигур
        lib/useShapeTransition.ts       # Переходы между фигурами

Shared:
    /src/shared/
        constants/shapes.ts             # Константы фигур
        types/index.ts                  # Общие типы
        utils/threeHelpers.ts           # Утилиты Three.js

Data:
    /src/data/
        periodicTable.ts                # Данные элементов

API:
    /src/api/
        main.py                         # Python API

Build Safety Rules:
    1. Импорты:
        - Проверять существование файлов перед импортом
        - Использовать абсолютные пути для импортов из features/
        - Все константы должны быть в model.ts
        - Не создавать новые файлы констант без обновления документации
    
    2. Типизация:
        - Все типы должны быть определены в model.ts
        - Использовать строгую типизацию
        - Избегать any и unknown
    
    3. Хуки:
        - Соблюдать порядок инициализации
        - Изолировать побочные эффекты
        - Очищать ресурсы в cleanup функциях
    
    4. Сборка:
        - Запускать проверку типов перед коммитом
        - Тестировать сборку локально перед пушем
        - Документировать все изменения в структуре проекта
    
    5. Обработка ошибок:
        - Избегать рекурсивных вызовов в анимациях
        - Очищать все анимации перед новыми
        - Использовать cancelAnimationFrame в cleanup
        - Проверять существование объектов перед анимацией
        - Логировать ошибки без рекурсии

Alias и модули: Используйте module.exports или настройте в .cersorrules алиасы для путей src/components/, src/hooks/, src/features/, src/shared/ и т.д., чтобы облегчить навигацию и автозаполнение для IDE.

Инструкции по строгой типизации:

Установите правила, запрещающие использование any и unknown без явного описания. Это гарантирует, что только корректно типизированные элементы будут сохраняться.
Добавьте правила для noImplicitAny, чтобы IDE подсвечивала области с неявным типом any.
FSD и разделение слоев:

Введите правило для использования только абсолютных путей в src/features/ и src/shared/. Это ограничит кросс-импорты между слоями и предотвратит импорт из "глубоких" путей.
Задайте ограничения на импорт компонентов и утилит только из src/features/shapes/lib или src/shared/utils, если они действительно будут использоваться другими модулями.
Проверка на существование файлов:

Используйте флаг resolve для проверки, что файлы существуют перед импортом. Это может помочь IDE сразу указывать на несуществующие файлы при автозаполнении и предотвратить создание мертвых ссылок.
Логирование и отладка:

Добавьте правила для запрета использования console.log или debugger в продакшене, чтобы избежать рекурсивных ошибок. Замените их на console.error с условием, что они будут использованы только в файлах *.debug.ts.
Организация хуков и эффектов:

Настройте правила, которые будут проверять, что хуки и эффекты правильно изолированы и помещены в папку src/hooks и src/features/. Это улучшит автоимпорт и точность подсказок.
Дополнительные проверки на утечки анимаций:

Примените правила для отлова пропущенных cancelAnimationFrame и clearTimeout, чтобы предотвратить утечки при удалении компонентов.

Current Status:
    ✅ Основные экраны работают
    ✅ Проблемы с переходом к сердцу и звезде    
    ✅ Требуется фикс появления сердца
    ✅ Требуется улучшение звезды Давида
    ⚠️ Нужна реорганизация под FSD
